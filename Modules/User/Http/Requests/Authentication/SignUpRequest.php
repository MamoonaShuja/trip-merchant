<?php

namespace Modules\User\Http\Requests\Authentication;

use Illuminate\Validation\Rule;
use Modules\Core\Http\Requests\BaseRequest;
use Modules\User\DataTransfer\Requests\SignUpDTO;

final class SignUpRequest extends BaseRequest {
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, string|array<int, mixed>>
     */
    public function rules(): array
    {
        return [
            "first_name"      => "required|string|min:3|max:99",
            "last_name"      => "required|string|min:3|max:99",
            "email"     => "required|email|max:99|unique:users,email",
            "password"  => "required|string|min:6|confirmed",
            "code"  => ["sometimes" , "string" , Rule::exists("users", "organization_code")],
        ];
    }

    public function messages()
    {
        return [
            'first_name.required' => "First Name is required",
            'first_name.string' => "First Name must be a string",
            'first_name.min' => "First Name should be at least 3 characters",
            'last_name.required' => "Last Name is required",
            'last_name.string' => "Last Name must be a string",
            'last_name.min' => "Last Name should be at least 3 characters",
            'email.required' => "Email must be required",
            'email.unique' => "Email has been already used",
            'email.email' => "Please enter correct email",
            'password.required' => "Password is required",
        ]; // TODO: Change the autogenerated stub
    }

    public function getDTO(): SignUpDTO
    {
        return SignUpDTO::create(
            strval($this->input("first_name")),
            strval($this->input("last_name")),
            strval($this->input("email")),
            strval($this->input("password")),
            strval($this->input("code")),
            null,
            null,
            null,
            null,
            $this->file("avatar"),
            null
        );
    }
}
